@import '../../styles/_variables.scss';

.about-page {
  height: 100%;
  overflow-y: auto;

  .about-container {
    display: flex;
    justify-content: space-around;
    align-items: flex-start;
    width: 100%;
    height: auto;
    padding-right: 10%;
    min-height: calc(100vh - 40px);

    @media screen and (max-width: $tablet-breakpoint) {
      flex-direction: column;
      padding: 20px;
      min-height: auto;
      max-height: calc(100vh - 120px);
    }
  }

  // Override the Layout's text-zone styles for scrollable content
  .text-zone {
    // Create a scrollable container for paragraphs
    .text-content {
      max-height: 60vh; // Limit height to make scrollable
      overflow-y: auto;
      padding: 22px; // Space for scrollbar
      scrollbar-gutter: stable;

      @media screen and (max-width: $tablet-breakpoint) {
        max-height: 40vh; // Adjust for smaller screens
        width: 100%;
      }

      @media screen and (max-width: $mobile-breakpoint) {
        max-height: 35vh;
      }

      // Custom scrollbar styling
      &::-webkit-scrollbar {
        width: 8px;
      }

      &::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 4px;
      }

      &::-webkit-scrollbar-thumb {
        background: $accent-color;
        border-radius: 4px;
        transition: background-color 0.3s ease;

        &:hover {
          background: lighten($accent-color, 10%);
        }
      }

      &::-webkit-scrollbar-thumb:active {
        background: darken($accent-color, 10%);
      }

      // Firefox scrollbar
      scrollbar-width: thin;
      scrollbar-color: $accent-color rgba(255, 255, 255, 0.1);
    }

    // Ensure proper layout proportions on smaller screens
    @media screen and (max-width: $tablet-breakpoint) {
      width: 100% !important;
      max-width: 100% !important;
      height: 50% !important;
      margin-bottom: 20px;

      // Center the content horizontally
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
    }
  }

  .cube-zone {
    position: absolute;
    right: 12%;
    top: 50%;
    transform: translateY(-50%);
    width: 40%;
    max-width: 500px;
    perspective: 1200px;

    // CSS custom properties for responsive cube sizing
    --cube-size: min(200px, 80vw);
    --cube-half-size: calc(var(--cube-size) / 2);
    --icon-size: calc(var(--cube-size) * 0.5);

    @media screen and (max-width: $tablet-breakpoint) {
      position: relative;
      right: auto;
      top: auto;
      transform: none;
      width: 100%;
      max-width: 600px;
      margin: 20px auto;
      height: 50%; // Ensure 50% height split
      display: flex;
      align-items: center;
      justify-content: center;
      --cube-size: min(160px, 70vw);
      --icon-size: calc(var(--cube-size) * 0.5);
    }

    @media screen and (max-width: $mobile-breakpoint) {
      --cube-size: min(120px, 60vw);
      --icon-size: calc(var(--cube-size) * 0.5);
    }

    @media screen and (max-width: 500px) {
      --cube-size: min(80px, 50vw);
      --icon-size: calc(var(--cube-size) * 0.5);
    }

    @media screen and (max-width: 350px) {
      --cube-size: min(60px, 45vw);
      --icon-size: calc(var(--cube-size) * 0.4);
    }

    .cube-card {
      background: rgba(0, 0, 0, 0.3);
      padding: 24px;
      border-radius: 4px;
      border: 1px solid $accent-color;
      position: relative;
      transform-style: preserve-3d;
      height: calc(
        var(--cube-size, 200px) * 2
      ); // Give cube 2x its size for proper breathing room
      width: calc(
        var(--cube-size, 200px) * 2.4
      ); // Make it wider than height for better proportions

      @media screen and (max-width: $tablet-breakpoint) {
        height: calc(
          var(--cube-size, 160px) * 2.2
        ); // Slightly more generous on tablet
        width: calc(var(--cube-size, 160px) * 2.6);
        max-width: 400px;
        padding: 20px;
      }

      @media screen and (max-width: $mobile-breakpoint) {
        height: calc(var(--cube-size, 120px) * 2.5); // More generous on mobile
        width: calc(var(--cube-size, 120px) * 2.9);
        padding: 16px;
        max-width: 350px;
      }

      @media screen and (max-width: 500px) {
        height: calc(
          var(--cube-size, 80px) * 3
        ); // Even more generous on small screens
        width: calc(var(--cube-size, 80px) * 3.4);
        padding: 12px;
        max-width: 280px;
      }

      @media screen and (max-width: 350px) {
        height: calc(
          var(--cube-size, 60px) * 3.5
        ); // Most generous on very small screens
        width: calc(var(--cube-size, 60px) * 3.9);
        padding: 10px;
        max-width: 220px;
      }

      &::before,
      &::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        pointer-events: none;
      }

      &::before {
        background: radial-gradient(
            1px 1px at 25px 25px,
            $accent-color 1px,
            transparent 0
          ),
          radial-gradient(
            1px 1px at 50px 50px,
            $accent-color 1px,
            transparent 0
          ),
          radial-gradient(
            1px 1px at 125px 125px,
            $accent-color 1px,
            transparent 0
          );
        background-size: 200px 200px;
        animation: moveStarsLayer1 18s ease-in-out infinite;
        opacity: 0.3;
      }

      &::after {
        background: radial-gradient(
            1.5px 1.5px at 75px 75px,
            $accent-color 1px,
            transparent 0
          ),
          radial-gradient(
            2px 2px at 175px 175px,
            $accent-color 1px,
            transparent 0
          ),
          radial-gradient(
            2.5px 2.5px at 150px 150px,
            $accent-color 1px,
            transparent 0
          );
        background-size: 250px 250px;
        animation: moveStarsLayer2 18s ease-in-out infinite;
        opacity: 0.2;
      }
    }
  }
}

@keyframes moveStarsLayer1 {
  0%,
  100% {
    transform: translate(0, 0) scale(1);
  }
  16% {
    transform: translate(-30px, 20px) scale(1.1) rotate(-90deg);
  }
  33% {
    transform: translate(20px, -30px) scale(0.9) rotate(90deg);
  }
  50% {
    transform: translate(-20px, -20px) scale(1.1) rotate(180deg);
  }
  66% {
    transform: translate(30px, 30px) scale(0.9) rotate(-90deg);
  }
  83% {
    transform: translate(-30px, -30px) scale(1.1) rotate(90deg);
  }
}

@keyframes moveStarsLayer2 {
  0%,
  100% {
    transform: translate(0, 0) scale(1) rotate(0deg);
  }
  16% {
    transform: translate(30px, -20px) scale(0.9) rotate(90deg);
  }
  33% {
    transform: translate(-20px, 30px) scale(1.1) rotate(-90deg);
  }
  50% {
    transform: translate(20px, 20px) scale(0.9) rotate(-180deg);
  }
  66% {
    transform: translate(-30px, -30px) scale(1.1) rotate(90deg);
  }
  83% {
    transform: translate(30px, 30px) scale(0.9) rotate(-90deg);
  }
}
